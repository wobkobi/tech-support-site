// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum BookingStatus {
  held
  confirmed
  cancelled
}

model Resource {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  bookings Booking[]

  @@unique([name])
}

model Booking {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  // FK must be ObjectId to match Resource.id on Mongo
  resourceId String   @db.ObjectId
  resource   Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)

  email String
  name  String

  // Mongo stores DateTime as BSON Date (UTC). No native @db.* here.
  startUtc DateTime
  endUtc   DateTime

  bufferBeforeMin Int @default(0)
  bufferAfterMin  Int @default(0)

  status         BookingStatus @default(held)
  holdExpiresUtc DateTime?

  cancelToken String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([resourceId, startUtc, endUtc])
  @@index([status, holdExpiresUtc])
}

model Review {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  text        String
  firstName   String?
  lastName    String?
  isAnonymous Boolean  @default(false)
  approved    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
